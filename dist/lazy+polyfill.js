(function(c,q){function g(a,c){c||(c=Object);return a instanceof c}function m(a,b){if(!a||"object"!=typeof a||g(a,Node)||g(a,NodeList))a=[a];var e=a[0]||a.selector||"[data-src]",d=a[1]||a.threshold||a.observer;a=a[2]||a.rootMargin;var l;d="object"==typeof d?d:{rootMargin:a||"0px",threshold:d||0};"function"!=typeof b&&(b=function(a){for(var b,d=0,e=a.length;d<e;d++)if(b=a[d],!k||b.isIntersecting){var h=k?b.target:b,f=h.getAttribute("data-srcset"),g=h.getAttribute("data-src");f&&(h.srcset=f);g&&(h.src=
g);"CustomEvent"in c&&h.dispatchEvent(new CustomEvent("$lazy",{bubbles:!0,cancelable:!0,detail:{el:h,entry:b}}));k&&k.unobserve(h)}});var k=f?new f(b,d):!1;g(e,Node)?l=[e]:l=g(e,NodeList)?e:q.querySelectorAll(e);d=0;for(a=l.length;d<a;d++)e=l[d],k?k.observe(e):b([e])}function r(a,b){p.push([a,b])}var f,n="IntersectionObserverEntry"in c?c.IntersectionObserverEntry.prototype:0;n&&"intersectionRatio"in n&&"isIntersecting"in n&&(f=c.IntersectionObserver);c.$lazy=m;var p=[];if(!f){if(c.$lazypoly)var b=
c.$lazypoly;b&&(c.$lazy=r,"function"===typeof b&&(b=b()),("string"!==typeof b&&"then"in b?b:$async.a(b)).then(function(){f=c.IntersectionObserver;c.$lazy=m;for(var a;a=p.shift();)m(a[0],a[1])}))}})(window,document);
