(function(f,g){function h(b,a){b&&"object"===typeof b||(b=[b]);var c=b[0]||b.selector||"[data-src]",d=b[1]||b.threshold||.006;b=b[2]||b.rootMargin||"0px";d="object"===typeof d?d:{threshold:[d],rootMargin:b};var e;"function"!==typeof a&&(a=function(b){for(var a,d=0,e=b.length;d<e;d++)if(a=b[d],!k||a.isIntersecting){var c=k?a.target:a,g=c.getAttribute("data-srcset"),h=c.getAttribute("data-src");g&&(c.srcset=g);h&&(c.src=h);"CustomEvent"in f&&c.dispatchEvent(new CustomEvent("$lazy",{bubbles:!0,cancelable:!0,
detail:{el:c,entry:a}}));k&&k.unobserve(c)}});var k=l?new l(a,d):!1;c instanceof Node?e=[c]:e=c instanceof NodeList?c:g.querySelectorAll(c);d=0;for(b=e.length;d<b;d++)c=e[d],k?k.observe(c):a([c])}var l=f.IntersectionObserver||!1;l&&"IntersectionObserverEntry"in f&&"intersectionRatio"in f.IntersectionObserverEntry.prototype&&!("isIntersecting"in IntersectionObserverEntry.prototype)&&Object.defineProperty(f.IntersectionObserverEntry.prototype,"isIntersecting",{get:function(){return 0<this.intersectionRatio}});
f.$lazy=h;var a;if(a=g.currentScript||g.querySelectorAll("script[data-lazy]")){(a=a.getAttribute("data-lazy"))&&0===a.indexOf("||")?a=a.split("||"):a=[a];for(var e,m=0,n=a.length;m<n;m++){try{e=JSON.parse(a)}catch(b){e=!1}e?h(e):h()}}})(window,document);
